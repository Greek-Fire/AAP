- name: set job template facts
  set_fact:
    job_template_inventory: "{{ (job_templates | extract_dict_from_list('inventory')) }}"
    job_template_project:   "{{ (job_templates | extract_dict_from_list('project')) }}"
  when: job_templates is defined

- name: fail if job_templates_inventory or job_templates_project is a list
  fail:
    msg:
      - "{{ item }} is a list, but it should be a dictionary."
      - "Please check the documentation for the correct format."
      - "Job templates can only support one inventory and one project."
  when: item | type_debug == 'list'
  with_items:
    - "{{ job_templates_inventory | default('pass')}}"
    - "{{ job_templates_project | default('pass')}}"

- debub:
    var: job_templates_inventory
- name: include inventory role
  include_role:
    name: inventory
  when: job_templates_inventory | type_debug == 'dict'

- name: include project role
  include_role:
    name: project
  when: job_templates_project | type_debug == 'dict'

- name: Create Job Template
  ansible.controller.job_template: 
    controller_oauth_token: "{{ item.controller_oauth_token | default(omit) }}"
    controller_username: "{{ item.controller_username | default(omit) }}"
    controller_password: "{{ item.controller_password | default(omit) }}"
    controller_host: "{{ item.controller_host | default(omit) }}"
    validate_certs:  "{{ item.validate_certs   | default(omit) }}"
    controller_config_file: "{{ item.controller_config_file | default(omit) }}"
    allow_simultaneous: "{{ item.allow_simultaneous | default(omit) }}"
    ask_credentials_on_launch: "{{ item.ask_credentials_on_launch | default(omit) }}"
    ask_diff_mode_on_launch: "{{ item.ask_diff_mode_on_launch | default(omit) }}"
    ask_execution_environment_on_launch: "{{ item.ask_execution_environment_on_launch | default(omit) }}"
    ask_inventory_on_launch: "{{ item.ask_inventory_on_launch | default(omit) }}"
    ask_job_type_on_launch: "{{ item.ask_job_type_on_launch | default(omit) }}"
    ask_limit_on_launch: "{{ item.ask_limit_on_launch | default(omit) }}"
    ask_skip_tags_on_launch: "{{ item.ask_skip_tags_on_launch | default(omit) }}"
    ask_tags_on_launch: "{{ item.ask_tags_on_launch | default(omit) }}"
    ask_verbosity_on_launch: "{{ item.ask_verbosity_on_launch | default(omit) }}"
    ask_variables_on_launch: "{{ item.ask_variables_on_launch | default(omit) }}"
    ask_job_slice_on_launch: "{{ item.ask_job_slice_on_launch | default(omit) }}"
    ask_forks_on_launch: "{{ item.ask_forks_on_launch | default(omit) }}"
    ask_instance_group_on_launch: "{{ item.ask_instance_group_on_launch | default(omit) }}"
    ask_labels_on_launch: "{{ item.ask_labels_on_launch | default(omit) }}"
    ask_scm_branch_on_launch: "{{ item.ask_scm_branch_on_launch | default(omit) }}"
    ask_timeout_on_launch: "{{ item.ask_timeout_on_launch | default(omit) }}"
    become_enabled: "{{ item.become_enabled | default(omit) }}"
    copy_from: "{{ item.copy_from | default(omit) }}"
    credentials: "{{ item.credentials | default(omit) }}"
    description: "{{ item.description | default(omit) }}"
    diff_mode: "{{ item.diff_mode | default(omit) }}"
    execution_environment: "{{ item.execution_environment | default(omit) }}"
    extra_vars: "{{ item.extra_vars | default(omit) }}"
    force_handlers: "{{ item.force_handlers | default(omit) }}"
    forks: "{{ item.forks | default(omit) }}"
    host_config_key: "{{ item.host_config_key | default(omit) }}"
    instance_groups: "{{ item.instance_group | default(omit) }}"
    inventory: "{{ item.inventory | default(omit) }}"
    job_slice_count: "{{ item.job_slice_count | default(omit) }}"
    job_tags: "{{ item.job_tags | default(omit) }}"
    job_type: "{{ item.job_type | default(omit) }}"
    labels: "{{ item.labels | default(omit) }}"
    limit: "{{ item.limit | default(omit) }}"
    name: "{{ item.name }}"
    new_name: "{{ item.new_name | default(omit) }}"
    organization: "{{ item.organization | default(omit) }}"
    playbook: "{{ item.playbook | default(omit) }}"
    project: "{{ item.project | default(omit) }}"
    scm_branch: "{{ item.scm_branch | default(omit) }}"
    prevent_instance_group_fallback: "{{ item.prevent_instance_group_fallback | default(omit) }}"
    start_at_task: "{{ item.start_at_task | default(omit) }}"
    state: "{{ item.state | default('present') }}"
    survey_enabled: "{{ item.survey_enabled | default(omit) }}"
    survey_spec: "{{ item.survey_spec | default(omit) }}"
    timeout: "{{ item.timeout | default(omit) }}"
    use_fact_cache: "{{ item.use_fact_cache | default(omit) }}"
    verbosity: "{{ item.verbosity | default(omit) }}"
    webhook_service: "{{ item.webhook_service | default(omit) }}"
    webhook_credential: "{{ item.webhook_credential | default(omit) }}"
  vars:
    template_inventory: 
  with_items: "{{ job_templates | default([]) }}"
